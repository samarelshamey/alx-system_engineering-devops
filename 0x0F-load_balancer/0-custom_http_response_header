#!/usr/bin/env bash
# Configure Nginx so that its HTTP response contains a custom header
#!/usr/bin/env bash
# Configure Nginx so that its HTTP response contains a custom header
sudo apt update
sudo apt install -y nginx

sudo ufw allow 'Nginx HTTP'

# Give ownership of user to website files for easy editing
if [ -d "/var/www" ]; then
        sudo chown -R "$USER":"$USER" /var/www
        sudo chmod -R 755 /var/www
else
        sudo mkdir -p /var/www
        sudo chown -R "$USER":"$USER" /var/www
        sudo chmod -R 755 /var/www
fi

# create directories if not present
for dir in /var/www/{html,error}; do
        if ! [ -d "$dir" ]; then
                mkdir -p "$dir"
        fi
done
echo "Hello Server!" > /var/www/html/index.html

# create new error page
echo "error page" > /var/www/html/error_404.html

# backup default server config file
sudo cp /etc/nginx/sites-enabled/default nginx-sites-enabled_default.backup

server_config=\
"server {
		listen 80 default_server;
		listen [::]:80 default_server;
		root /var/www/html;
		index index.html index.htm index.nginx-debian.html
		server_name_;
		add_header X-Served-By \$hostname;
		location / {
			try_files \$uri \$uri/ =404;
		}
		if (\$request_filename ~ redirect_me){
			rewrite ^ https://th3-gr00t.tk/ permanent;
		}
		error_page 404 /error_404.html;
		location = /error_404.html {
			internal;
		}
}"

#shellcheck disable=SC2154
echo "$server_config" | sudo dd status=none of=/etc/nginx/sites-enabled/default

if [ "$(pgrep -c nginx)" -le 0 ]; then
	sudo service nginx start
else
	sudo service nginx restart
fi
